version: '3.8'

services:
  # PostgreSQL para a API
  fiap-pos-tech-db:
    image: postgres:15-alpine
    container_name: fiap-pos-tech-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-fiap_pos_tech_db}
      POSTGRES_USER: ${POSTGRES_USER:-fiap_pos_tech_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-fiap_pos_tech_password}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_api_data:/var/lib/postgresql/data
      - ./fiap-pos-tech-api/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - fiap-pos-tech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-fiap_pos_tech_user} -d ${POSTGRES_DB:-fiap_pos_tech_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL para Keycloak
  keycloak-db:
    image: postgres:15-alpine
    container_name: keycloak-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_NAME:-keycloak}
      POSTGRES_USER: ${KEYCLOAK_DB_USER:-keycloak}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_password}
    ports:
      - "${KEYCLOAK_DB_PORT:-5433}:5432"
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    networks:
      - fiap-pos-tech-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KEYCLOAK_DB_USER:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:23.0
    container_name: fiap-keycloak
    restart: unless-stopped
    command:
      - start-dev
      - --import-realm
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB_NAME:-keycloak}
      KC_DB_USERNAME: ${KEYCLOAK_DB_USER:-keycloak}
      KC_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD:-keycloak_password}
      KC_HOSTNAME: keycloak
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HTTP_HOST: 0.0.0.0
      KC_LOG_LEVEL: info
      KC_METRICS_ENABLED: true
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
    volumes:
      - ./fiap-pos-tech-auth/keycloak/import:/opt/keycloak/data/import
    depends_on:
      keycloak-db:
        condition: service_healthy
    networks:
      - fiap-pos-tech-network
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8080;echo -e 'GET /health/ready HTTP/1.1\r\nhost: 127.0.0.1\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 60s

  # API Service (Development)
  fiap-pos-tech-api:
    build:
      context: ./fiap-pos-tech-api
      dockerfile: Dockerfile.dev
    container_name: fiap-pos-tech-api-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${API_PORT:-3001}
      DATABASE_URL: postgresql://${POSTGRES_USER:-fiap_pos_tech_user}:${POSTGRES_PASSWORD:-fiap_pos_tech_password}@fiap-pos-tech-db:5432/${POSTGRES_DB:-fiap_pos_tech_db}
      WEBHOOK_SECRET: ${WEBHOOK_SECRET:-your_webhook_secret_key}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-fiap-pos-tech}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-pos-tech-api}
    ports:
      - "${API_PORT:-3001}:3001"
    volumes:
      - ./fiap-pos-tech-api/src:/app/src
      - ./fiap-pos-tech-api/prisma:/app/prisma
      - /app/node_modules
    depends_on:
      fiap-pos-tech-db:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    networks:
      - fiap-pos-tech-network

  # Auth Service (Development)
  fiap-pos-tech-auth:
    build:
      context: ./fiap-pos-tech-auth
      dockerfile: Dockerfile.dev
    container_name: fiap-pos-tech-auth-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: ${AUTH_PORT:-3002}
      KEYCLOAK_URL: http://keycloak:8080
      KEYCLOAK_REALM: ${KEYCLOAK_REALM:-fiap-pos-tech}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID:-pos-tech-api}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET:-your-client-secret-here}
      KEYCLOAK_ADMIN_USERNAME: ${KEYCLOAK_ADMIN_USERNAME:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:3001}
    ports:
      - "${AUTH_PORT:-3002}:3002"
    volumes:
      - ./fiap-pos-tech-auth/src:/app/src
      - /app/node_modules
    depends_on:
      keycloak:
        condition: service_healthy
    networks:
      - fiap-pos-tech-network

volumes:
  postgres_api_data:
    driver: local
  keycloak_postgres_data:
    driver: local

networks:
  fiap-pos-tech-network:
    driver: bridge
